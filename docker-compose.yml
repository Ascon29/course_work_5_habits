services:

  redis:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis_data:/data
    expose:
      - '6379'

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    expose:
      - '5432'

  web:
    build: .
    command: bash -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  celery:
    build: .
    command: bash -c 'celery -A config worker -l info'
    depends_on:
      - redis
      - db
      - web
    restart: on-failure
    volumes:
      - .:/web
    env_file:
      - .env

  celery-beat:
    build: .
    command: bash -c 'celery -A config beat -l info'
    depends_on:
      - redis
      - db
      - web
    restart: on-failure
    volumes:
      - .:/web
    env_file:
      - .env

volumes:
  postgres_data:
  static_volume:
  redis_data:
